name: Notify LINE from kintone

on:
  schedule:
    - cron: '0 16 * * *'
  workflow_dispatch:

jobs:
  notify:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Install dependencies
      run: npm install axios dayjs

    - name: Run notification script
      env:
        KINTONE_TOKEN: ${{ secrets.KINTONE_TOKEN }}
        KINTONE_DOMAIN: ${{ secrets.KINTONE_DOMAIN }}
        LINE_TOKEN: ${{ secrets.LINE_TOKEN }}
        GROUP_ID: ${{ secrets.GROUP_ID }}
      run: |
        echo "Running notification..."
        echo "require('axios'); require('dayjs');" > notify.js
        node <<'EOF'
        const axios = require("axios");
        const dayjs = require("dayjs");

        (async () => {
          const today = dayjs().format("YYYY-MM-DD");

          const res = await axios.get(
            `https://${process.env.KINTONE_DOMAIN}/k/v1/records.json`,
            {
              headers: { "X-Cybozu-API-Token": process.env.KINTONE_TOKEN },
              params: {
                app: 10,
                query: `eigyo_status in ("‰øùÁïô") and Êó•ÊôÇ < "${today}"`
              }
            }
          );

          const records = res.data.records;
          if (records.length === 0) {
            console.log("‚úÖ ÈÄöÁü•ÂØæË±°„Å™„Åó");
            return;
          }

          let message = "üö®„ÄêÂïÜË´áÊú™ÂØæÂøú„Ç¢„É©„Éº„Éà„Äë\\n\\n‰ª•‰∏ã„ÅÆÊ°à‰ª∂„Åå„Äå‰øùÁïô„Äç„ÅÆ„Åæ„Åæ„Åß„Åô‚ö†Ô∏è\\n\\n";
          for (const r of records) {
            message += `üë§ È°ßÂÆ¢ÂêçÔºö${r["line_name"].value}\\n`;
            message += `üìÖ ÂïÜË´á‰∫àÂÆöÊó•Ôºö${r["day"].value.split("T")[0]}\\n`;
            message += `üôç‚Äç‚ôÇÔ∏è Âñ∂Ê•≠ÊãÖÂΩìÔºö${r["ooo"].value}\\n\\n`;
          }
          message += "„ÅîÁ¢∫Ë™ç„ÅäÈ°ò„ÅÑ„Åó„Åæ„ÅôÔºÅ";

          await axios.post("https://api.line.me/v2/bot/message/push",
            {
              to: process.env.GROUP_ID,
              messages: [{ type: "text", text: message }]
            },
            {
              headers: {
                Authorization: `Bearer ${process.env.LINE_TOKEN}`,
                "Content-Type": "application/json"
              }
            }
          );

          console.log("üì§ LINEÈÄöÁü•ÈÄÅ‰ø°ÂÆå‰∫ÜÔºÅ");
        })().catch(e => {
          console.error("‚ùå „Ç®„É©„Éº", e.response?.data || e.message);
          process.exit(1);
        });
        EOF

